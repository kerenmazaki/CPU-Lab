-- VHDL Entity MIPS.MIPS_tb.symbol
--
-- Created:
--          by - kolaman.UNKNOWN (KOLAMAN-PC)
--          at - 09:22:45 17/02/2013
--
-- Generated by Mentor Graphics' HDL Designer(TM) 2011.1 (Build 18)
--


ENTITY MIPS_tb IS
-- Declarations

END MIPS_tb ;

--
-- VHDL Architecture MIPS.MIPS_tb.struct
--
-- Created:
--          by - kolaman.UNKNOWN (KOLAMAN-PC)
--          at - 09:22:45 17/02/2013
--
-- Generated by Mentor Graphics' HDL Designer(TM) 2011.1 (Build 18)
--
LIBRARY IEEE;
USE IEEE.STD_LOGIC_1164.ALL;
USE IEEE.STD_LOGIC_ARITH.ALL;

LIBRARY work;

ARCHITECTURE struct OF MIPS_tb IS

   -- Architecture declarations

   -- Internal signal declarations
	SIGNAL	reset, clock		: STD_LOGIC; 
	SIGNAL	BPADD_input			: STD_LOGIC_VECTOR( 7 DOWNTO 0 );	
	SIGNAL	PC_out				: STD_LOGIC_VECTOR( 9 DOWNTO 0 );
	SIGNAL	read_data_1_ID_out	: STD_LOGIC_VECTOR( 31 DOWNTO 0 );
	SIGNAL	read_data_2_ID_out	: STD_LOGIC_VECTOR( 31 DOWNTO 0 );
	SIGNAL	write_data_ID_out	: STD_LOGIC_VECTOR( 31 DOWNTO 0 );	
    SIGNAL 	Branch_ID_out		: STD_LOGIC;
	SIGNAL	Instruction_ID_out	: STD_LOGIC_VECTOR( 31 DOWNTO 0 );
	SIGNAL	RegWrite_ID_out		: STD_LOGIC;
	SIGNAL	Instruction_EX_out	: STD_LOGIC_VECTOR( 31 DOWNTO 0 );
	SIGNAL	ALU_result_EX_out	: STD_LOGIC_VECTOR( 31 DOWNTO 0 );
	SIGNAL	ALU_Ainput_EX_out	: STD_LOGIC_VECTOR( 31 DOWNTO 0 );
	SIGNAL	ALU_Binput_EX_out	: STD_LOGIC_VECTOR( 31 DOWNTO 0 );
	SIGNAL	Zero_EX				: STD_LOGIC;
	SIGNAL	Instruction_MEM_out	: STD_LOGIC_VECTOR( 31 DOWNTO 0 );
	SIGNAL	MemWrite_MEM_out	: STD_LOGIC;
	SIGNAL	write_data_MEM_out	: STD_LOGIC_VECTOR( 31 DOWNTO 0 );
	SIGNAL	read_data_MEM_out	: STD_LOGIC_VECTOR( 31 DOWNTO 0 );
	SIGNAL	address_MEM_out		: STD_LOGIC_VECTOR( 31 DOWNTO 0 );	
	SIGNAL	instruction_WB_out	: STD_LOGIC_VECTOR( 31 DOWNTO 0 );
	SIGNAL	MemtoReg_WB_out		: STD_LOGIC;
	SIGNAL	CLKCNT_out			: STD_LOGIC_VECTOR( 15 DOWNTO 0 );
	SIGNAL	STCNT_out			: STD_LOGIC_VECTOR( 7 DOWNTO 0 );
	SIGNAL	FHCNT_out			: STD_LOGIC_VECTOR( 7 DOWNTO 0 );
	SIGNAL STtrigger			: STD_LOGIC;


   -- Component Declarations
	component mips IS
	
	PORT( 
		reset, clock										: IN STD_LOGIC; 
		BPADD_input											: IN STD_LOGIC_VECTOR( 7 DOWNTO 0 );
	
		-- Output important signals to pins for easy display in Simulator
		PC_out												: OUT STD_LOGIC_VECTOR( 9 DOWNTO 0 );
		read_data_1_ID_out									: OUT STD_LOGIC_VECTOR( 31 DOWNTO 0 );
		read_data_2_ID_out									: OUT STD_LOGIC_VECTOR( 31 DOWNTO 0 );
		write_data_ID_out									: OUT STD_LOGIC_VECTOR( 31 DOWNTO 0 );	
     	Branch_ID_out										: OUT STD_LOGIC;
		Instruction_ID_out									: OUT STD_LOGIC_VECTOR( 31 DOWNTO 0 );
		RegWrite_ID_out										: OUT STD_LOGIC;
		Instruction_EX_out									: OUT STD_LOGIC_VECTOR( 31 DOWNTO 0 );
		ALU_result_EX_out									: OUT STD_LOGIC_VECTOR( 31 DOWNTO 0 );
		ALU_Ainput_EX_out									: OUT STD_LOGIC_VECTOR( 31 DOWNTO 0 );
		ALU_Binput_EX_out									: OUT STD_LOGIC_VECTOR( 31 DOWNTO 0 );
		Zero_EX												: OUT STD_LOGIC;
		Instruction_MEM_out									: OUT STD_LOGIC_VECTOR( 31 DOWNTO 0 );
		MemWrite_MEM_out									: OUT STD_LOGIC;
		write_data_MEM_out									: OUT STD_LOGIC_VECTOR( 31 DOWNTO 0 );
		read_data_MEM_out									: OUT STD_LOGIC_VECTOR( 31 DOWNTO 0 );
		address_MEM_out										: OUT STD_LOGIC_VECTOR( 31 DOWNTO 0 );	
		instruction_WB_out									: OUT STD_LOGIC_VECTOR( 31 DOWNTO 0 );
		MemtoReg_WB_out										: OUT STD_LOGIC;
		CLKCNT_out											: OUT STD_LOGIC_VECTOR( 15 DOWNTO 0 );
		STCNT_out											: OUT STD_LOGIC_VECTOR( 7 DOWNTO 0 );
		FHCNT_out											: OUT STD_LOGIC_VECTOR( 7 DOWNTO 0 );
		STtrigger											: OUT STD_LOGIC
		);
	END component;
 

 COMPONENT MIPS_tester
   PORT (
		reset, clock										: OUT STD_LOGIC; 
		BPADD_input											: OUT STD_LOGIC_VECTOR( 7 DOWNTO 0 );
		
		PC_out												: IN STD_LOGIC_VECTOR( 9 DOWNTO 0 );
		read_data_1_ID_out									: IN STD_LOGIC_VECTOR( 31 DOWNTO 0 );
		read_data_2_ID_out									: IN STD_LOGIC_VECTOR( 31 DOWNTO 0 );
		write_data_ID_out									: IN STD_LOGIC_VECTOR( 31 DOWNTO 0 );	
     	Branch_ID_out										: IN STD_LOGIC;
		Instruction_ID_out									: IN STD_LOGIC_VECTOR( 31 DOWNTO 0 );
		RegWrite_ID_out										: IN STD_LOGIC;
		Instruction_EX_out									: IN STD_LOGIC_VECTOR( 31 DOWNTO 0 );
		ALU_result_EX_out									: IN STD_LOGIC_VECTOR( 31 DOWNTO 0 );
		ALU_Ainput_EX_out									: IN STD_LOGIC_VECTOR( 31 DOWNTO 0 );
		ALU_Binput_EX_out									: IN STD_LOGIC_VECTOR( 31 DOWNTO 0 );
		Zero_EX												: IN STD_LOGIC;
		Instruction_MEM_out									: IN STD_LOGIC_VECTOR( 31 DOWNTO 0 );
		MemWrite_MEM_out									: IN STD_LOGIC;
		write_data_MEM_out									: IN STD_LOGIC_VECTOR( 31 DOWNTO 0 );
		read_data_MEM_out									: IN STD_LOGIC_VECTOR( 31 DOWNTO 0 );
		address_MEM_out										: IN STD_LOGIC_VECTOR( 31 DOWNTO 0 );	
		instruction_WB_out									: IN STD_LOGIC_VECTOR( 31 DOWNTO 0 );
		MemtoReg_WB_out										: IN STD_LOGIC;
		CLKCNT_out											: IN STD_LOGIC_VECTOR( 15 DOWNTO 0 );
		STCNT_out											: IN STD_LOGIC_VECTOR( 7 DOWNTO 0 );
		FHCNT_out											: IN STD_LOGIC_VECTOR( 7 DOWNTO 0 );
		STtrigger											: IN STD_LOGIC
		);
   END COMPONENT;

   -- Optional embedded configurations
   -- pragma synthesis_off
   FOR ALL : MIPS USE ENTITY work.mips;
   FOR ALL : MIPS_tester USE ENTITY work.mips_tester;
   -- pragma synthesis_on


BEGIN

   -- Instance port mappings.
   
   U_0 : MIPS
   
    PORT MAP (
		reset				=> reset,
		clock				=> clock,							
		BPADD_input			=> BPADD_input,									
		PC_out				=> PC_out,											
		read_data_1_ID_out	=> read_data_1_ID_out,						
		read_data_2_ID_out	=> read_data_2_ID_out,								
		write_data_ID_out	=> write_data_ID_out,								
     	Branch_ID_out		=> Branch_ID_out,								
		Instruction_ID_out	=> Instruction_ID_out,						
		RegWrite_ID_out		=> RegWrite_ID_out,								
		Instruction_EX_out	=> Instruction_EX_out,								
		ALU_result_EX_out	=> ALU_result_EX_out,									
		ALU_Ainput_EX_out	=> ALU_Ainput_EX_out,								
		ALU_Binput_EX_out	=> ALU_Binput_EX_out,									
		Zero_EX				=> Zero_EX,										
		Instruction_MEM_out => Instruction_MEM_out,								
		MemWrite_MEM_out	=> MemWrite_MEM_out,								
		write_data_MEM_out	=> write_data_MEM_out,						
		read_data_MEM_out	=> read_data_MEM_out,						
		address_MEM_out		=> address_MEM_out,	
		instruction_WB_out	=> instruction_WB_out,
		MemtoReg_WB_out		=> MemtoReg_WB_out,
		CLKCNT_out			=> CLKCNT_out,
		STCNT_out			=> STCNT_out,
		FHCNT_out			=> FHCNT_out,
		STtrigger			=> STtrigger);
	  
	U_1 : MIPS_tester
   
    PORT MAP (
 		reset				=> reset,
		clock				=> clock,							
		BPADD_input			=> BPADD_input,									
		PC_out				=> PC_out,											
		read_data_1_ID_out	=> read_data_1_ID_out,						
		read_data_2_ID_out	=> read_data_2_ID_out,								
		write_data_ID_out	=> write_data_ID_out,								
     	Branch_ID_out		=> Branch_ID_out,								
		Instruction_ID_out	=> Instruction_ID_out,						
		RegWrite_ID_out		=> RegWrite_ID_out,								
		Instruction_EX_out	=> Instruction_EX_out,								
		ALU_result_EX_out	=> ALU_result_EX_out,									
		ALU_Ainput_EX_out	=> ALU_Ainput_EX_out,								
		ALU_Binput_EX_out	=> ALU_Binput_EX_out,									
		Zero_EX				=> Zero_EX,										
		Instruction_MEM_out => Instruction_MEM_out,								
		MemWrite_MEM_out	=> MemWrite_MEM_out,								
		write_data_MEM_out	=> write_data_MEM_out,						
		read_data_MEM_out	=> read_data_MEM_out,						
		address_MEM_out		=> address_MEM_out,	
		instruction_WB_out	=> instruction_WB_out,
		MemtoReg_WB_out		=> MemtoReg_WB_out,
		CLKCNT_out			=> CLKCNT_out,
		STCNT_out			=> STCNT_out,
		FHCNT_out			=> FHCNT_out,
		STtrigger			=> STtrigger);

END struct;
